---
AWSTemplateFormatVersion: '2010-09-09'
Description: Wordpress ASG with TG and LB

Parameters:
  ImageId:
    Type: String
    Description: 'Linux 2 AMI for Ireland eu-west1 Region'
    Default: 'ami-0c1bc246476a5572b'
  InstanceType:
    Type: String
    Description: Choosing t2 micro because it is free
    Default: t2.micro
  Key1:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: MyDemoKey1
  Snet1:
    Description: Subnet1 ID
    Type: String
    Default: subnet-03b2b746e62f3345d
  Snet2:
    Description: Subnet2 ID
    Type: String
    Default: subnet-0ff59f869374c89ac	
  Snet3:
    Description: Subnet3 ID
    Type: String
    Default: subnet-0b3372cb27bb57b45
  VPCID:
    Description: VPC ID
    Type: String
    Default: vpc-082a7c7f643853527

Resources:
  HTTPSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Instance to allow HTTP access via port 80
      SecurityGroupIngress:
        IpProtocol: tcp
        SourceSecurityGroupName: !Ref HTTPminALBFrontEnd
        FromPort: 80
        ToPort: 80
  SSHSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Instance to allow SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
  HTTPminALBFrontEnd:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: LoadBalancer to allow HTTP access to minTargetGroup 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WPInstanceSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: Instance to EFS and RDS
  EFSSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Instance to allow EFS access
      SecurityGroupIngress:
        IpProtocol: tcp
        SourceSecurityGroupName: !Ref WPInstanceSecGroup
        FromPort: 2049
        ToPort: 2049
  RDSSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Instance to allow RDS access
      SecurityGroupIngress:
        IpProtocol: tcp
        SourceSecurityGroupName: !Ref WPInstanceSecGroup
        FromPort: 3306
        ToPort: 3306

  # EFSFileSystem:
  #   Type: 'AWS::EFS::FileSystem'
  #   Properties:
  #     BackupPolicy:
  #       Status: DISABLED
  #     Encrypted: true
  #     FileSystemTags:
  #       - Key: Name
  #         Value: TestEFS

  # EFSMountTargetSub1:  
  #   Type: AWS::EFS::MountTarget
  #   Properties: 
  #     FileSystemId: !Ref EFSFileSystem
  #     SecurityGroups: 
  #       - !GetAtt EFSSecGroup.GroupId
  #     SubnetId: !Ref Snet1

  # EFSMountTargetSub2:  
  #   Type: AWS::EFS::MountTarget
  #   Properties: 
  #     FileSystemId: !Ref EFSFileSystem
  #     SecurityGroups: 
  #       - !GetAtt EFSSecGroup.GroupId
  #     SubnetId: !Ref Snet2

  # EFSMountTargetSub3:  
  #   Type: AWS::EFS::MountTarget
  #   Properties: 
  #     FileSystemId: !Ref EFSFileSystem
  #     SecurityGroups: 
  #       - !GetAtt EFSSecGroup.GroupId
  #     SubnetId: !Ref Snet3

  RDSmySQL:
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: 20
      # AvailabilityZone: eu-west-1
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t3.micro
      DBInstanceIdentifier: dbinstance-1
      DBName: ApacheDBnamn
      # DBSecurityGroups: 
      #   - !Ref RDSSecGroup
      Engine: mysql
      EngineVersion: 8.0.28
      MasterUsername: admin
      MasterUserPassword: losenord
      Port: 3306
      PubliclyAccessible: no
      VPCSecurityGroups: 
        - !GetAtt RDSSecGroup.GroupId
  # WPEc2Instance:
  #   Description: Mount EFS konfigurera sql och wp sedan sl√§ngas